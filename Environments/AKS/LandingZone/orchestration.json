{
    "ModuleConfigurationsPath": "../../Modules",
    "ModuleConfigurations": [
        {
            "Name": "DiagnosticsStorageAccount",
            "ModuleDefinitionName": "StorageAccounts",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.ResourceGroup}",
            "Comments": "Storage Account that is used for ...",
            "Version": "2.0",
            "Policies": {
                "Comments": "Optional - If no object is specified, no Policies deployment will occur",
                "OverrideParameters": {
                    "effect": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Policies.Effect}"
                    },
                    "resourceGroup": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.ResourceGroup}"
                    },
                    "resourceGroupLocation": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Location}"
                    }
                }
            },
            "Deployment": {
                "Comments": "We need the 'update' module instance to lock this resource after the Virtual Network got created",
                "TemplatePath": "../../Modules/StorageAccounts/2.0/deploy.json",
                "OverrideParameters": {
                    "storageAccountName": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Name}"
                    },
                    "storageAccountSku": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Sku}"
                    },
                    "location": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Location}"
                    }
                }
            }
        },
        {
            "Name": "LogAnalytics",
            "ModuleDefinitionName": "LogAnalytics",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.LogAnalytics.ResourceGroup}",
            "Deployment": {
                "OverrideParameters": {
                    "logAnalyticsWorkspaceName": {
                        "value": "${Parameters.ModuleConfigurationParameters.LogAnalytics.Name}"
                    },
                    "diagnosticStorageAccountName": {
                        "value": "reference(DiagnosticsStorageAccount.storageAccountName)"
                    },
                    "diagnosticStorageAccountId": {
                        "value": "reference(DiagnosticsStorageAccount.storageAccountResourceId)"
                    },
                    "diagnosticStorageAccountAccessKey": {
                        "value": "reference(DiagnosticsStorageAccount.storageAccountAccessKey)"
                    },
                    "location": {
                        "value": "${Parameters.ModuleConfigurationParameters.LogAnalytics.Location}"
                    }
                }
            }
        },
        {
            "Name": "AzureSecurityCenter",
            "ModuleDefinitionName": "SecurityCenter",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.SecurityCenter.ResourceGroup}",
            "Deployment": {
                "OverrideParameters": {
                    "logAnalyticsResourceId": {
                        "value": "reference(LogAnalytics.logAnalyticsWorkspaceResourceId)"
                    }
                }
            }
        },
        {
            "Name": "EventHub",
            "ModuleDefinitionName": "EventHub",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.EventHub.ResourceGroup}",
            "Deployment": {
                "OverrideParameters": {
                    "location": {
                        "value": "${Parameters.ModuleConfigurationParameters.LogAnalytics.Location}"
                    },
                    "eventHubName": {
                        "value": "${Parameters.ModuleConfigurationParameters.EventHub.Name}"
                    },
                    "eventHubSku": {
                        "value": "Standard"
                    },
                    "namespaceName": {
                        "value": "${Parameters.ModuleConfigurationParameters.EventHub.Namespace}"
                    },
                    "consumerGroupName": {
                        "value": "${Parameters.ModuleConfigurationParameters.EventHub.ConsumerGroupName}"
                    }
                }
            }
        },
        {
            "Name": "DefaultNSG",
            "ModuleDefinitionName": "NetworkSecurityGroups",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.Network.ResourceGroup}",
            "Deployment": {
                "OverrideParameters": {
                    "workspaceId": {
                        "value": "reference(LogAnalytics.logAnalyticsWorkspaceResourceId)"
                    },
                    "diagnosticStorageAccountId": {
                        "value": "reference(DiagnosticsStorageAccount.storageAccountResourceId)"
                    },
                    "networkSecurityGroupName": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.NetworkSecurityGroups[0].Name}"
                    },
                    "networkSecurityGroupSecurityRules": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.NetworkSecurityGroups[0].Rules}"
                    }
                }
            }
        },
        {
            "Name": "DefaultRouteTable",
            "ModuleDefinitionName": "RouteTables",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.Network.ResourceGroup}",
            "Deployment": {
                "OverrideParameters": {
                    "routeTableName": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.UserDefinedRoutes[0].Name}"
                    },
                    "routes": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.UserDefinedRoutes[0].Routes}"
                    }
                }
            }
        },
        {
            "Name": "VirtualNetwork",
            "ModuleDefinitionName": "vNet",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.Network.ResourceGroup}",
            "Deployment": {
                "OverrideParameters": {
                    "vnetName": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.Name}"
                    },
                    "vnetAddressPrefixes": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.AddressPrefixes}"
                    },
                    "dnsServers": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.DnsServers}"
                    },
                    "subnets": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.Subnets}"
                    },
                    "enableDdosProtection": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.EnableDdosProtection}"
                    },
                    "enableVmProtection": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.EnableVmProtection}"
                    }
                }
            }
        },
        {
            "Name": "VirtualNetworkPeeringToAKS",
            "ModuleDefinitionName": "vNetPeering",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.Network.ResourceGroup}",
            "Deployment": {
                "OverrideParameters": {
                     "localVnetName": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.Name}"
                    },
                    "peeringName": {
                        "value": "aks-shared-peering"
                    },
                    "remoteVirtualNetworkId": {
                        "value": "${Parameters.ModuleConfigurationParameters.SharedServices.Network.Id}"
                    },
                    "useRemoteGateways": {
                        "value": false
                    }
                }
            }
        },
        {
            "Name": "VirtualNetworkPeeringFromAKS",
            "ModuleDefinitionName": "vNetPeering",
            "Subscription": "SharedServices",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.SharedServices.Network.ResourceGroupName}",
            "Deployment": {
                "OverrideParameters": {
                     "localVnetName": {
                        "value": "${Parameters.ModuleConfigurationParameters.SharedServices.Network.Name}"
                    },
                    "peeringName": {
                        "value": "shared-aks-peering"
                    },
                    "remoteVirtualNetworkId": {
                        "value": "reference(VirtualNetwork.vNetResourceId)"
                    },
                    "useRemoteGateways": {
                        "value": false
                    }
                }
            }
        },
        {
            "Name": "EnableServiceEndPointOnDiagnosticStorageAccount",
            "ModuleDefinitionName": "StorageAccounts",
            "Updates": "DiagnosticsStorageAccount",
            "Comments": "Enables Service endpoint on the Storage Account",
            "Deployment": {
                "OverrideParameters": {
                    "networkAcls": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.NetworkAcls}"
                    },
                    "vNetId": {
                        "value": "reference(VirtualNetwork.vNetResourceId)"
                    }
                }
            }
        },
        {
            "Name": "KeyVault",
            "ModuleDefinitionName": "KeyVault",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.KeyVault.ResourceGroup}",
            "Deployment": {
                "OverrideParameters": {
                    "keyVaultName": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.Name}"
                    },
                    "accessPolicies": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.AccessPolicies}"
                    },
                    "secretsObject": {
                        "value": {
                            "secrets": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets}"
                        }
                    },
                    "enableVaultForDeployment": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.EnableVaultForDeployment}"
                    },
                    "enableVaultForDiskEncryption": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.EnableVaultForDiskEncryption}"
                    },
                    "enableVaultForTemplateDeployment": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.EnableVaultForTemplateDeployment}"
                    },
                    "vaultSku": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.Sku}"
                    },
                    "diagnosticStorageAccountId": {
                        "value": "reference(DiagnosticsStorageAccount.storageAccountResourceId)"
                    },
                    "workspaceId": {
                        "value": "reference(LogAnalytics.logAnalyticsWorkspaceResourceId)"
                    },
                    "networkAcls": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.NetworkAcls}"
                    },
                    "vNetId": {
                        "value": "reference(VirtualNetwork.vNetResourceId)"
                    }
                }
            }
        }
    ]
}